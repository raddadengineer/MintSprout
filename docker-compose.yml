version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mintsprout-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: mintsprout
      POSTGRES_USER: mintsprout
      POSTGRES_PASSWORD: mintsprout_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - mintsprout-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mintsprout -d mintsprout"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MintSprout Application
  mintsprout:
    build: .
    container_name: mintsprout-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://mintsprout:mintsprout_password@postgres:5432/mintsprout
      JWT_SECRET: your-super-secure-jwt-secret-change-this-in-production
      ALLOWED_ORIGINS: http://localhost:8080,http://127.0.0.1:8080
    ports:
      - "8080:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mintsprout-network
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/auth/me"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Nginx reverse proxy for HTTPS
  nginx:
    image: nginx:alpine
    container_name: mintsprout-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - mintsprout
    networks:
      - mintsprout-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local

networks:
  mintsprout-network:
    driver: bridge